version: "3"
services:
  db:
    image: mysql:8.0
    networks:
      - arithmetic
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: arithmetic
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - "3320:3306"
    volumes:
      - ./.docker/mysql:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      interval: 5s
      timeout: 3s
      retries: 30

  zookeeper:
    platform: linux/amd64
    networks:
      - arithmetic
    image: "confluentinc/cp-zookeeper:6.1.0"
    volumes:
      - ./.docker/zookeper:/var/lib/zookeeper
    container_name: zookeeper
    ports:
      - 2181:2181
    environment:
      TZ: Sao_Paulo/Brazil
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:
      test: nc -z localhost 2181 || exit 1
      interval: 10s
      timeout: 2s
      retries: 30
      start_period: 10s

  kafka:
    platform: linux/amd64
    networks:
      - arithmetic
    image: "confluentinc/cp-enterprise-kafka:6.1.0"
    container_name: kafka
    depends_on:
      zookeeper: 
        condition: service_healthy
    ports:
      - '9092:9092'
      - '29092'
    environment:
      TZ: Sao_Paulo/Brazil
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 100
      CONFLUENT_METRICS_ENABLE: 'false'
    healthcheck:
      test: nc -z localhost 9092 || exit 1
      interval: 7s
      timeout: 2s
      retries: 30
      start_period: 10s

  control-center:
    image: confluentinc/cp-enterprise-control-center:7.3.0
    networks:
      - arithmetic
    hostname: control-center
    container_name: control-center
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'kafka:29092'
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 9021
    healthcheck:
      test: nc -z localhost 9021 || exit 1
      interval: 5s
      timeout: 2s
      retries: 20
      start_period: 10s

  configure-kafka:
    platform: linux/amd64
    networks:
      - arithmetic
    image: "confluentinc/cp-enterprise-kafka:6.1.0"
    depends_on:
      kafka: 
        condition: service_healthy
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server kafka:29092 --create --if-not-exists --topic OPERATION_CALCULATED --replication-factor 1 --partitions 1

      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server kafka:29092 --list
      "

  arithmetic-calulator:
    build:
      context: .
      dockerfile: Dockerfile.dev
    networks:
      - arithmetic
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      db:
        condition: service_healthy
      kafka:
        condition: service_healthy
    ports:
      - "7001:7001"
    healthcheck:
      test: nc -z localhost 7001 || exit 1
      interval: 5s
      timeout: 2s
      retries: 20
      start_period: 20s

  run-migrations:
    build:
      context: .
      dockerfile: Dockerfile.dev
    networks:
      - arithmetic
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy
    command: npm run migration:run

networks:
  arithmetic:
    name: arithmetic
    driver: bridge
